<!-- OSSEC Server configuration from chef ossec cookbook v.<%= node[:version]%> -->
<ossec_config>
  <global>
    <email_notification><%= node[:ossec][:email_notification] %></email_notification>
    <% node[:ossec][:email_to].sort_by {|k| k}.each do |recipient| -%>
    <email_to><%= recipient %></email_to>
    <% end -%>
    <smtp_server><%= node[:ossec][:smtp_server] %></smtp_server>
    <email_from><%= node[:ossec][:email_from]%></email_from>
    <email_maxperhour><%=node[:ossec][:email_maxperhour]%></email_maxperhour>
    <memory_size><%=node[:ossec][:memory_size]%></memory_size>
    <% node[:ossec][:white_list].sort_by {|k| k}.each do |ip| -%>
    <white_list><%= ip %></white_list>
    <% end -%>

  </global>

  <rules>
    <include>rules_config.xml</include>
    <include>pam_rules.xml</include>
    <include>sshd_rules.xml</include>
    <include>syslog_rules.xml</include>
    <include>arpwatch_rules.xml</include>
    <include>symantec-av_rules.xml</include>
    <include>pix_rules.xml</include>
    <include>named_rules.xml</include>
    <include>smbd_rules.xml</include>
    <include>pure-ftpd_rules.xml</include>
    <include>proftpd_rules.xml</include>
    <include>ms_ftpd_rules.xml</include>
    <include>hordeimp_rules.xml</include>
    <include>vpopmail_rules.xml</include>
    <include>ids_rules.xml</include>
    <include>squid_rules.xml</include>
    <include>firewall_rules.xml</include>
    <include>netscreenfw_rules.xml</include>
    <include>postfix_rules.xml</include>
    <include>sendmail_rules.xml</include>
    <include>imapd_rules.xml</include>
    <include>mailscanner_rules.xml</include>
    <include>ms-exchange_rules.xml</include>
    <include>racoon_rules.xml</include>
    <include>vpn_concentrator_rules.xml</include>
    <include>spamd_rules.xml</include>
    <include>msauth_rules.xml</include>
    <include>attack_rules.xml</include>
    <include>ossec_rules.xml</include>
    <include>apache_rules.xml</include>
    <include>web_rules.xml</include>
    <include>local_rules.xml</include>
  </rules>

  <remote>
    <connection><%=node[:ossec][:remote][:connection]%></connection>
    <local_ip><%= node.ipaddress %></local_ip>
  </remote>

  <syslog_output>
    <server><%= node[:ossec][:syslog_output][:ip] %></server>
    <port><%= node[:ossec][:syslog_output][:port] %></port>
    <level><%= node[:ossec][:syslog_output][:min_level] %></level>
  </syslog_output>

  <alerts>
    <log_alert_level><%= node[:ossec][:log_alert_level] %></log_alert_level>
    <email_alert_level><%= node[:ossec][:email_alert_level]%></email_alert_level>
  </alerts>

  <reports>
    <category>authentication_success</category>
    <user type="relation">srcip</user>
    <title>Daily report: Successful logins</title>
    <% node[:ossec][:email_to].sort_by {|k| k}.each do |recipient| -%>
    <email_to><%= recipient %></email_to>
    <% end -%>
  </reports>

  <reports>
    <category>web</category>
    <title>Daily report: Web</title>
    <% node[:ossec][:email_to].sort_by {|k| k}.each do |recipient| -%>
    <email_to><%= recipient %></email_to>
    <% end -%>
  </reports>

  <reports>
    <title>Daily report: Level 7</title>
    <level>7</level>
    <srcip type="relation">level</srcip>
    <% node[:ossec][:email_to].sort_by {|k| k}.each do |recipient| -%>
    <email_to><%= recipient %></email_to>
    <% end -%>
  </reports>

  <reports>
    <title>Daily report: Level 12</title>
    <level>12</level>
    <srcip type="relation">level</srcip>
    <% node[:ossec][:email_to].sort_by {|k| k}.each do |recipient| -%>
    <email_to><%= recipient %></email_to>
    <% end -%>
  </reports>

  <reports>
    <category>syscheck</category>
    <title>Daily report: File changes</title>
    <location type="relation">filename</location>
    <% node[:ossec][:email_to].sort_by {|k| k}.each do |recipient| -%>
    <email_to><%= recipient %></email_to>
    <% end -%>
  </reports>

<%
node[:ossec][:email_alerts].sort_by {|k,v| k}.each do |recipient,params|
  locations = []
  if params.has_key?('event_location_tag')
    locations = @ossec_agents.select{
                  |n| n[:tags].include?(
                    params[:event_location_tag]
                  )
                }.map {|n2| n2.network.lanip || '172.172.172.172'}
  elsif params.has_key?('resolved_search')
    locations = params[:resolved_search]
  end
  locations.sort_by {|k| k}.each do |location|
-%>
  <email_alerts>
    <email_to><%=recipient%></email_to>
    <event_location><%=location%></event_location>
<%  params.sort_by {|k,v| k}.each do |key, value|
      unless key =~ /event_location_tag|event_location_search|resolved_search/
        if key.eql?('tags')
          value.sort_by {|k| k}.each do |tag|
-%>
    <<%=tag%> />
<%        end
        else
-%>
    <<%=key%>><%=value%></<%=key%>>
<%      end
      end
    end
    -%>
  </email_alerts>
<%
  end
end
-%>

  <syscheck>
    <!-- Frequency that syscheck is executed -- default every 2 hours -->
    <frequency><%=node[:ossec][:syscheck][:frequency]%></frequency>

    <!-- Directories to check  (perform all possible verifications) -->
<%node[:ossec][:syscheck][:directories].sort_by {|k,v| k}.each do |directory,params| -%>
    <directories check_all="yes" report_changes="<%=params[:report_changes]%>" realtime="<%=params[:realtime]%>"><%=directory%></directories>
<%end-%>

    <alert_new_files><%=node[:ossec][:syscheck][:alert_new_files]%></alert_new_files>
    <auto_ignore><%=node[:ossec][:syscheck][:auto_ignore]%></auto_ignore>

    <!-- Files/directories to ignore -->
<%node[:ossec][:syscheck][:ignore].sort_by {|k| k}.each do |path| -%>
    <ignore><%=path%></ignore>
<%end-%>
    <!-- Node specific Files/directories to ignore -->
<%
if not node[:ossec][:syscheck][:local_ignore].nil?
  node[:ossec][:syscheck][:local_ignore].sort_by {|k| k}.each do |file,params|
    if params[:use_here] == "true"
      type = 'simple'
      unless params[:type].nil?
        if params[:type] == 'sregex'
          type = 'sregex'
        end
      end
      if type == 'sregex'
-%>
    <ignore type='sregex'><%=file%></ignore>
<%    else -%>
    <ignore><%=file%></ignore>
<%    end
    end
  end
end
-%>
  </syscheck>


  <rootcheck>
    <rootkit_files>/var/ossec/etc/shared/rootkit_files.txt</rootkit_files>
    <rootkit_trojans>/var/ossec/etc/shared/rootkit_trojans.txt</rootkit_trojans>
  </rootcheck>

  <!-- Files to monitor (localfiles) -->
<%node[:ossec][:syslog_files].sort_by {|k| k}.each do |file| -%>
  <localfile>
    <log_format>syslog</log_format>
    <location><%=file%></location>
  </localfile>
<%end-%>
  <!-- Node specific files to monitor -->
<%
if not node[:ossec][:local_syslog_files].nil?
  node[:ossec][:local_syslog_files].sort_by {|k,v| k}.each do |logfile,params|
    if params[:use_here] == "true"
-%>
  <localfile>
    <log_format><%=params[:log_format]%></log_format>
    <location><%=logfile%></location>
  </localfile>
<%
    end
  end
end
-%>
</ossec_config>
